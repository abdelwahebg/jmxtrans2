5
<classHistory><id hierarchicalHash="170a2cdfd"><classId hash="4037917099"><name><name>org/jmxtrans/spring/EmbeddedJmxTransNamespaceHandler</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="173ed48e"><classId hash="389993614"><name><name>org/jmxtrans/spring/SpringEmbeddedJmxTrans</name></name></classId></id><coverageId>1a1083e2</coverageId></classHistory>
<classHistory><id hierarchicalHash="1a1083e2"><classId hash="437289954"><name><name>org/jmxtrans/spring/EmbeddedJmxTransFactoryTest</name></name></classId></id><coverageId>1a1083e2</coverageId></classHistory>
<classHistory><id hierarchicalHash="b9654f1b"><classId hash="2073869484"><name><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="5238c941"><classId hash="1379453249"><name><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></name></classId></id><coverageId>1a1083e2</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>doParse</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>getBeanClass</name></method><methodDesc>(Lorg/w3c/dom/Element;)Ljava/lang/Class;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransBeanDefinitionParser</name></clazz><method><name>resolveId</name></method><methodDesc>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/springframework/core/io/ResourceLoader;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/springframework/core/io/ResourceLoader;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/springframework/core/io/ResourceLoader;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObject</name></method><methodDesc>()Lorg/jmxtrans/spring/SpringEmbeddedJmxTrans;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>getObjectType</name></method><methodDesc>()Ljava/lang/Class;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>isSingleton</name></method><methodDesc>()Z</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>isSingleton</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.spring.EmbeddedJmxTransFactoryTest._</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrl</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransFactory</name></clazz><method><name>setConfigurationUrls</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransNamespaceHandler</name></clazz><method><name>init</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/EmbeddedJmxTransNamespaceHandler</name></clazz><method><name>init</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/SpringEmbeddedJmxTrans</name></clazz><method><name>afterPropertiesSet</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/spring/SpringEmbeddedJmxTrans</name></clazz><method><name>destroy</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
