6
<classHistory><id hierarchicalHash="eddc3f0c"><classId hash="3990634252"><name><name>org/jmxtrans/standalone/cli/ExistingFileValidatorTest</name></name></classId></id><coverageId>eddc3f0c</coverageId></classHistory>
<classHistory><id hierarchicalHash="7e0001db"><classId hash="2113929691"><name><name>org/jmxtrans/standalone/cli/JmxTransParameterTest</name></name></classId></id><coverageId>7e0001db</coverageId></classHistory>
<classHistory><id hierarchicalHash="404484d"><classId hash="67389517"><name><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></name></classId></id><coverageId>eddc3f0c</coverageId></classHistory>
<classHistory><id hierarchicalHash="18285aec"><classId hash="405297900"><name><name>org/jmxtrans/standalone/cli/JmxTransParameters</name></name></classId></id><coverageId>7e0001db</coverageId></classHistory>
<classHistory><id hierarchicalHash="a07655a9"><classId hash="2692109737"><name><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="fb2a0fe3"><classId hash="4213837795"><name><name>org/jmxtrans/standalone/JmxTransformer</name></name></classId></id><coverageId>0</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.standalone.cli.ExistingFileValidatorTest.validationFailsIfFileIsADirectory(org.jmxtrans.standalone.cli.ExistingFileValidatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.standalone.cli.ExistingFileValidatorTest.validationPassIfFileExists(org.jmxtrans.standalone.cli.ExistingFileValidatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.standalone.cli.ExistingFileValidatorTest.validationPassIfFileExists(org.jmxtrans.standalone.cli.ExistingFileValidatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.standalone.cli.ExistingFileValidatorTest.validationPassIfFileExists(org.jmxtrans.standalone.cli.ExistingFileValidatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.standalone.cli.ExistingFileValidatorTest.validationPassIfFileExists(org.jmxtrans.standalone.cli.ExistingFileValidatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.standalone.cli.ExistingFileValidatorTest.validationPassIfFileExists(org.jmxtrans.standalone.cli.ExistingFileValidatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.standalone.cli.ExistingFileValidatorTest.validationPassIfFileExists(org.jmxtrans.standalone.cli.ExistingFileValidatorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/JmxTransParameters</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingDirectoryValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/ExistingFileValidator</name></clazz><method><name>validate</name></method><methodDesc>(Ljava/lang/String;Ljava/io/File;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/JmxTransParameters</name></clazz><method><name>getConfigDirs</name></method><methodDesc>()Ljava/lang/Iterable;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/JmxTransParameters</name></clazz><method><name>getConfigFiles</name></method><methodDesc>()Ljava/lang/Iterable;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/standalone/cli/JmxTransParameters</name></clazz><method><name>isIgnoringParsingErrors</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
