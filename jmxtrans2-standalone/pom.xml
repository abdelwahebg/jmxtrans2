<?xml version="1.0" encoding="UTF-8"?>
<!--

    The MIT License
    Copyright (c) 2014 JMXTrans Team

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.jmxtrans.jmxtrans2</groupId>
        <artifactId>jmxtrans2</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>jmxtrans2-standalone</artifactId>
    <name>JMXTrans - standalone</name>
    <description>JMX metrics exporter</description>

    <properties>
        <jsw.dir>${project.build.directory}/generated-resources/appassembler/jsw/${package.daemon.name}</jsw.dir>
        <main.class>org.jmxtrans.standalone.JmxTransformer</main.class>
        <package.daemon.name>${project.artifactId}d</package.daemon.name>
        <package.group>${project.artifactId}</package.group>
        <package.install.dir>/usr/share/${project.artifactId}</package.install.dir>
        <package.user>${project.artifactId}</package.user>
        <verify.bundleBranchRate>0.30</verify.bundleBranchRate>
        <verify.bundleLineRate>0.25</verify.bundleLineRate>
        <verify.coverage.threshold>26</verify.coverage.threshold>
        <verify.mutation.threshold>11</verify.mutation.threshold>
        <verify.packageBranchRate>0.0</verify.packageBranchRate>
        <verify.packageLineRate>0.0</verify.packageLineRate>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jmxtrans.jmxtrans2</groupId>
            <artifactId>jmxtrans2-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <configuration>
                    <merge>true</merge>
                    <message>Creating site for ${project.name} ${project.version}</message>
                    <path>${project.artifactId}</path>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>all</shadedClassifierName>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${main.class}</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>appassembler-maven-plugin</artifactId>
                <configuration>
                    <daemons>
                        <daemon>
                            <id>${package.daemon.name}</id>
                            <mainClass>${main.class}</mainClass>
                            <commandLineArguments>
                                <commandLineArgument>-d</commandLineArgument>
                                <commandLineArgument>/var/lib/${project.artifactId}</commandLineArgument>
                            </commandLineArguments>
                            <jvmSettings>
                                <extraArguments>
                                    <extraArgument>-Dcom.sun.management.jmxremote</extraArgument>
                                    <extraArgument>-Dcom.sun.management.jmxremote.ssl=false</extraArgument>
                                    <extraArgument>-Dcom.sun.management.jmxremote.authenticate=false</extraArgument>
                                    <extraArgument>-Dcom.sun.management.jmxremote.port=2101</extraArgument>
                                </extraArguments>
                            </jvmSettings>
                            <platforms>
                                <platform>jsw</platform>
                            </platforms>
                            <generatorConfigurations>
                                <generatorConfiguration>
                                    <generator>jsw</generator>
                                    <includes>
                                        <include>linux-x86-32</include>
                                        <include>linux-x86-64</include>
                                    </includes>
                                    <configuration>
                                        <wrapper.pidfile>/var/run/${package.daemon.name}</wrapper.pidfile>
                                        <property>
                                            <name>run.as.user.envvar</name>
                                            <value>${package.user}</value>
                                        </property>
                                        <property>
                                            <name>wrapper.logfile</name>
                                            <value>/var/log/${package.daemon.name}/${project.artifactId}.log</value>
                                        </property>
                                    </configuration>
                                </generatorConfiguration>
                            </generatorConfigurations>
                        </daemon>
                    </daemons>
                    <programs>
                        <program>
                            <mainClass>${main.class}</mainClass>
                            <id>${project.artifactId}</id>
                        </program>
                    </programs>
                </configuration>
                <executions>
                    <execution>
                        <id>appassembler</id>
                        <goals>
                            <goal>assemble</goal>
                            <goal>generate-daemons</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!--
                RPM packaging is done in a profile to ensure that it does not impact build on platforms not supporting
                RPM tools. Once we are happy with how this works, we could probably autoactivate this profile if
                appropriate tools are detected on the system.
            -->
            <id>rpm</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <configuration>
                            <group>Applications/Communications</group>
                            <defineStatements>
                                <!--
                                    The package contains Tanukisoft libs for multiple architectures. Multi-arch package
                                    do not exist, so we *should* split this package in a jmxtrans-common package
                                    plus an arch specific package for each architecture, containing only the Tanukisoft
                                    libraries. I think this is overkill, so let's create a non compliant noarch package.
                                -->
                                <defineStatement>_binaries_in_noarch_packages_terminate_build 0</defineStatement>
                            </defineStatements>
                            <preinstallScriptlet>
                                <script>if [ $1 = 1 ]; then
                                    /usr/sbin/useradd -c "${project.name}" -s /bin/sh -r -d \
                                    ${package.install.dir} -U ${package.user}
                                    fi</script>
                            </preinstallScriptlet>
                            <postinstallScriptlet>
                                <script>/sbin/chkconfig --add ${package.daemon.name}</script>
                            </postinstallScriptlet>
                            <preremoveScriptlet>
                                <script>if [ $1 = 0 ]; then
                                    /sbin/service ${package.daemon.name} stop
                                    /sbin/chkconfig --del ${package.daemon.name}
                                    /usr/sbin/userdel ${package.user}
                                    fi</script>
                            </preremoveScriptlet>
                            <requires>
                                <require>java</require>
                            </requires>
                            <mappings>
                                <mapping>
                                    <directory>${package.install.dir}/etc</directory>
                                    <sources>
                                        <source>
                                            <location>${jsw.dir}/etc</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>${package.install.dir}/bin</directory>
                                    <filemode>755</filemode>
                                    <sources>
                                        <source>
                                            <location>${jsw.dir}/bin</location>
                                            <excludes>
                                                <exclude>*.bat</exclude>
                                            </excludes>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>${package.install.dir}/lib</directory>
                                    <sources>
                                        <source>
                                            <location>${jsw.dir}/lib</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/usr/bin</directory>
                                    <filemode>755</filemode>
                                    <sources>
                                        <source>
                                            <location>${project.basedir}/bin/</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/etc/${package.daemon.name}</directory>
                                    <configuration>true</configuration>
                                    <sources>
                                        <softlinkSource>
                                            <location>${package.install.dir}/etc</location>
                                        </softlinkSource>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/etc/init.d</directory>
                                    <sources>
                                        <softlinkSource>
                                            <location>${package.install.dir}/bin/${package.daemon.name}</location>
                                        </softlinkSource>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/var/lib/${project.artifactId}</directory>
                                </mapping>
                                <mapping>
                                    <directory>/var/log/${package.daemon.name}</directory>
                                    <username>${package.user}</username>
                                    <groupname>${package.group}</groupname>
                                </mapping>
                                <mapping>
                                    <directory>/var/run/${package.daemon.name}</directory>
                                    <username>${package.user}</username>
                                    <groupname>${package.group}</groupname>
                                </mapping>
                            </mappings>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-rpm</id>
                                <goals>
                                    <goal>attached-rpm</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
