<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="JMXTrans - additional writers"><sessioninfo id="testing-worker-linux-968a87ce-1-8421-linux-7-52045289-671f55de" start="1424813354860" dump="1424813360725"/><sessioninfo id="testing-worker-linux-968a87ce-1-8421-linux-7-52045289-7bc9d493" start="1424813994013" dump="1424813999371"/><package name="org/jmxtrans/writers/additional"><class name="org/jmxtrans/writers/additional/LibratoWriter$Factory"><method name="&lt;init&gt;" desc="()V" line="189"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/Map;)Lorg/jmxtrans/core/output/support/BatchingOutputWriter;" line="194"><counter type="INSTRUCTION" missed="12" covered="61"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProxy" desc="(Ljava/util/Map;)Ljava/net/Proxy;" line="219"><counter type="INSTRUCTION" missed="14" covered="15"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadAppInfo" desc="()Lorg/jmxtrans/utils/appinfo/AppInfo;" line="229"><counter type="INSTRUCTION" missed="7" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseUrl" desc="(Ljava/lang/String;)Ljava/net/URL;" line="237"><counter type="INSTRUCTION" missed="14" covered="5"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="47" covered="87"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="7" covered="17"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jmxtrans/writers/additional/LibratoWriter$1"><method name="&lt;init&gt;" desc="(Lorg/jmxtrans/writers/additional/LibratoWriter;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Lorg/jmxtrans/writers/additional/LibratoWriter$ResultsClassifier;" line="73"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jmxtrans/writers/additional/LibratoWriter"><method name="&lt;init&gt;" desc="(Lcom/fasterxml/jackson/core/JsonFactory;Ljava/lang/String;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeBatch" desc="(Ljava/io/OutputStream;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/io/OutputStream;Lorg/jmxtrans/core/results/QueryResult;)I" line="91"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterBatch" desc="(Ljava/io/OutputStream;)I" line="97"><counter type="INSTRUCTION" missed="36" covered="53"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeResultsAs" desc="(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/Iterable;)I" line="111"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeNumberField" desc="(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/String;Ljava/lang/Number;)V" line="138"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="219"/><counter type="BRANCH" missed="9" covered="19"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jmxtrans/writers/additional/LibratoWriter$ResultsClassifier"><method name="&lt;init&gt;" desc="()V" line="154"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addResult" desc="(Lorg/jmxtrans/core/results/QueryResult;)V" line="161"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCounters" desc="()Ljava/lang/Iterable;" line="175"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGauges" desc="()Ljava/lang/Iterable;" line="179"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="183"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="LibratoWriter.java"><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="12" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="5" ci="8" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="12" mb="0" cb="0"/><line nr="101" mi="0" ci="12" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="25" ci="6" mb="6" cb="2"/><line nr="106" mi="6" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="10" mb="0" cb="2"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="2" cb="2"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="2"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="127" mi="0" ci="11" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="2"/><line nr="141" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="2"/><line nr="145" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="2"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="1" cb="1"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="2"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="2"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="11" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="16" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="17" mb="0" cb="0"/><line nr="207" mi="3" ci="2" mb="3" cb="1"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="1" cb="1"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="7" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="3" ci="4" mb="3" cb="1"/><line nr="224" mi="11" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="1" ci="0" mb="0" cb="0"/><line nr="231" mi="6" ci="0" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="239" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="413"/><counter type="BRANCH" missed="16" covered="28"/><counter type="LINE" missed="7" covered="86"/><counter type="COMPLEXITY" missed="12" covered="28"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="83" covered="413"/><counter type="BRANCH" missed="16" covered="28"/><counter type="LINE" missed="7" covered="86"/><counter type="COMPLEXITY" missed="12" covered="28"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="4"/></package><counter type="INSTRUCTION" missed="83" covered="413"/><counter type="BRANCH" missed="16" covered="28"/><counter type="LINE" missed="7" covered="86"/><counter type="COMPLEXITY" missed="12" covered="28"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="4"/></report>