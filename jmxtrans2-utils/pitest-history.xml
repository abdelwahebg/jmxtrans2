39
<classHistory><id hierarchicalHash="d4aa573e"><classId hash="3567933246"><name><name>org/jmxtrans/utils/io/Resource</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b085051b"><classId hash="2961507611"><name><name>org/jmxtrans/utils/collections/ArrayUtils</name></name></classId></id><coverageId>2ae68ea7</coverageId></classHistory>
<classHistory><id hierarchicalHash="8b3ed3fa"><classId hash="2336150522"><name><name>org/jmxtrans/utils/collections/Iterables2Test</name></name></classId></id><coverageId>8b3ed3fa</coverageId></classHistory>
<classHistory><id hierarchicalHash="14ca50a1"><classId hash="348803233"><name><name>org/jmxtrans/utils/ConfigurationUtils</name></name></classId></id><coverageId>5546788d</coverageId></classHistory>
<classHistory><id hierarchicalHash="cbfc3c00"><classId hash="3422305280"><name><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueueMBean</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="2fe18f52"><classId hash="803311442"><name><name>org/jmxtrans/utils/appinfo/GitRepositoryStateTest</name></name></classId></id><coverageId>2fe18f52</coverageId></classHistory>
<classHistory><id hierarchicalHash="81d90365"><classId hash="2178483045"><name><name>org/jmxtrans/utils/time/Interval</name></name></classId></id><coverageId>f5a05700</coverageId></classHistory>
<classHistory><id hierarchicalHash="55d3f90d"><classId hash="1439955213"><name><name>org/jmxtrans/utils/PropertyPlaceholderResolverTest</name></name></classId></id><coverageId>55d3f90d</coverageId></classHistory>
<classHistory><id hierarchicalHash="b3fbfe75"><classId hash="3019636341"><name><name>org/jmxtrans/utils/time/NanoChronometer</name></name></classId></id><coverageId>8edfe67b</coverageId></classHistory>
<classHistory><id hierarchicalHash="f854315d"><classId hash="4166267229"><name><name>org/jmxtrans/utils/VisibleForTesting</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="2a6685f"><classId hash="44460127"><name><name>org/jmxtrans/utils/time/SystemClock</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="43a4ee76"><classId hash="1134882422"><name><name>org/jmxtrans/utils/io/NullOutputStreamTest</name></name></classId></id><coverageId>43a4ee76</coverageId></classHistory>
<classHistory><id hierarchicalHash="8edfe67b"><classId hash="2397038203"><name><name>org/jmxtrans/utils/NanoChronometerTest</name></name></classId></id><coverageId>8edfe67b</coverageId></classHistory>
<classHistory><id hierarchicalHash="80c034a7"><classId hash="2160080039"><name><name>org/jmxtrans/utils/time/ManualClock</name></name></classId></id><coverageId>111f600c8</coverageId></classHistory>
<classHistory><id hierarchicalHash="1c93cdc7"><classId hash="479448519"><name><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></name></classId></id><coverageId>12edfd8a1</coverageId></classHistory>
<classHistory><id hierarchicalHash="6162a41a"><classId hash="1633854490"><name><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></name></classId></id><coverageId>55d3f90d</coverageId></classHistory>
<classHistory><id hierarchicalHash="e746ca6a"><classId hash="3880176234"><name><name>org/jmxtrans/utils/concurrent/NamedThreadFactoryTest</name></name></classId></id><coverageId>e746ca6a</coverageId></classHistory>
<classHistory><id hierarchicalHash="f1e2f6a1"><classId hash="4058183329"><name><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueueTest</name></name></classId></id><coverageId>f1e2f6a1</coverageId></classHistory>
<classHistory><id hierarchicalHash="fefe494f"><classId hash="4278077775"><name><name>org/jmxtrans/utils/appinfo/AppInfoTest</name></name></classId></id><coverageId>fefe494f</coverageId></classHistory>
<classHistory><id hierarchicalHash="a5c90bf"><classId hash="173838527"><name><name>org/jmxtrans/utils/StringUtils2Test</name></name></classId></id><coverageId>a5c90bf</coverageId></classHistory>
<classHistory><id hierarchicalHash="506999b9"><classId hash="1349097913"><name><name>org/jmxtrans/utils/Preconditions2</name></name></classId></id><coverageId>d137a5f0</coverageId></classHistory>
<classHistory><id hierarchicalHash="70e2db14"><classId hash="1893915412"><name><name>org/jmxtrans/utils/io/IoUtilsTest</name></name></classId></id><coverageId>70e2db14</coverageId></classHistory>
<classHistory><id hierarchicalHash="474df018"><classId hash="1196290072"><name><name>org/jmxtrans/utils/collections/Iterables2</name></name></classId></id><coverageId>8b3ed3fa</coverageId></classHistory>
<classHistory><id hierarchicalHash="b3122b70"><classId hash="3004312432"><name><name>org/jmxtrans/utils/io/StandardResource</name></name></classId></id><coverageId>cbaeb43d</coverageId></classHistory>
<classHistory><id hierarchicalHash="f5a05700"><classId hash="4120925952"><name><name>org/jmxtrans/utils/time/IntervalTest</name></name></classId></id><coverageId>f5a05700</coverageId></classHistory>
<classHistory><id hierarchicalHash="bd699cbf"><classId hash="3177815231"><name><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></name></classId></id><coverageId>f1e2f6a1</coverageId></classHistory>
<classHistory><id hierarchicalHash="791427f6"><classId hash="2031364086"><name><name>org/jmxtrans/utils/time/Clock</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d137a5f0"><classId hash="3510085104"><name><name>org/jmxtrans/utils/Preconditions2Test</name></name></classId></id><coverageId>d137a5f0</coverageId></classHistory>
<classHistory><id hierarchicalHash="83161a4d"><classId hash="2199263821"><name><name>org/jmxtrans/utils/time/ManualClockTest</name></name></classId></id><coverageId>83161a4d</coverageId></classHistory>
<classHistory><id hierarchicalHash="ec319075"><classId hash="3962671221"><name><name>org/jmxtrans/utils/appinfo/AppInfo</name></name></classId></id><coverageId>fefe494f</coverageId></classHistory>
<classHistory><id hierarchicalHash="cbaeb43d"><classId hash="3417224253"><name><name>org/jmxtrans/utils/io/StandardResourceTest</name></name></classId></id><coverageId>cbaeb43d</coverageId></classHistory>
<classHistory><id hierarchicalHash="5546788d"><classId hash="1430681741"><name><name>org/jmxtrans/utils/ConfigurationUtilsTest</name></name></classId></id><coverageId>5546788d</coverageId></classHistory>
<classHistory><id hierarchicalHash="2ae68ea7"><classId hash="719752871"><name><name>org/jmxtrans/utils/collections/ArrayUtilsTest</name></name></classId></id><coverageId>2ae68ea7</coverageId></classHistory>
<classHistory><id hierarchicalHash="c070c438"><classId hash="3228615736"><name><name>org/jmxtrans/utils/io/FileResource</name></name></classId></id><coverageId>27c6d0f5</coverageId></classHistory>
<classHistory><id hierarchicalHash="8f97792a"><classId hash="2409068842"><name><name>org/jmxtrans/utils/io/NullOutputStream</name></name></classId></id><coverageId>43a4ee76</coverageId></classHistory>
<classHistory><id hierarchicalHash="b2db59f4"><classId hash="3000719860"><name><name>org/jmxtrans/utils/StringUtils2</name></name></classId></id><coverageId>a5c90bf</coverageId></classHistory>
<classHistory><id hierarchicalHash="91f6fb9e"><classId hash="2448882590"><name><name>org/jmxtrans/utils/io/IoUtils</name></name></classId></id><coverageId>70e2db14</coverageId></classHistory>
<classHistory><id hierarchicalHash="a7a4abff"><classId hash="2812587007"><name><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></name></classId></id><coverageId>e746ca6a</coverageId></classHistory>
<classHistory><id hierarchicalHash="27c6d0f5"><classId hash="667341045"><name><name>org/jmxtrans/utils/io/FileResourceTest</name></name></classId></id><coverageId>27c6d0f5</coverageId></classHistory>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingBooleanReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validBooleanWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validBooleanWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validBooleanWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validBooleanWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingBooleanReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validBooleanWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getBoolean</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Z)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingBooleanReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)I</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidIntegerWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getInt</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validLongWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.invalidLongWithDefaultValueThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingLongReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validLongWithDefaultValueIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getLong</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;J)J</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingLongReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingIntegerThrowsException(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.validIntegerIsParsed(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingStringWithDefaultValueReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.existingStringWithDefaultValueIsFound(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.existingStringWithDefaultValueIsFound(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.existingStringWithDefaultValueIsFound(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingStringWithDefaultValueReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.existingStringWithDefaultValueIsFound(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/ConfigurationUtils</name></clazz><method><name>getString</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.ConfigurationUtilsTest.nonExistingStringWithDefaultValueReturnsDefaultValue(org.jmxtrans.utils.ConfigurationUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentThrowsExceptionOnFalse(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentThrowsExceptionOnFalse(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentThrowsExceptionOnFalse(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentDoesNotThrowExceptionOnTrue(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentPublishMessageInException(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentPublishMessageInException(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkArgumentPublishMessageInException(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyThrowsExceptionOnEmptyArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyThrowsExceptionOnEmptyArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyThrowsExceptionOnEmptyArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyThrowsExceptionOnEmptyArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyThrowsExceptionOnEmptyArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyReturnGivenArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkNotEmpty</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.Preconditions2Test.checkNotEmptyReturnGivenArgument(org.jmxtrans.utils.Preconditions2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveComplexStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveComplexStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveComplexStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveComplexStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveComplexStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveComplexStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveComplexStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveComplexStringWithSystemProperty(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.PropertyPlaceholderResolverTest.testResolveStringWithDefaultValue(org.jmxtrans.utils.PropertyPlaceholderResolverTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.nonAlphaNumericCharacters(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.nonAlphaNumericCharacters(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.dotIsNotEscaped(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.nonAlphaNumericCharacters(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.nonAlphaNumericCharacters(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.nonAlphaNumericCharacters(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.nonAlphaNumericCharacters(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.nonAlphaNumericCharacters(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.dotIsNotEscaped(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.nonAlphaNumericCharacters(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.dotIsNotEscaped(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.nonAlphaNumericCharacters(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;ZLjava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.leadingAndTrailingQuotesAreIgnored(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.delimitedStringToListReturnsNullWhenArgumentIsNull(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.delimitedStringToListReturnsNullWhenArgumentIsNull(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>delimitedStringToList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testDelimitedStringToList(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.joiningWithNullDelimiterIsNotAllowed(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.joiningWithNullDelimiterIsNotAllowed(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.joiningNullIsNull(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.joiningWithNullDelimiterIsNotAllowed(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.joiningNullIsNull(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>join</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testJoin(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.reversingWithNullDelimiterIsNotAllowed(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.reversingWithNullDelimiterIsNotAllowed(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.reversingNullTokensReturnsNull(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.reversingWithNullDelimiterIsNotAllowed(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.reversingNullTokensReturnsNull(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.StringUtils2Test.testReverseTokens(org.jmxtrans.utils.StringUtils2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;Lorg/jmxtrans/utils/appinfo/GitRepositoryState;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;Lorg/jmxtrans/utils/appinfo/GitRepositoryState;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;Lorg/jmxtrans/utils/appinfo/GitRepositoryState;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.versionNumberIsDotSeparated(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;Lorg/jmxtrans/utils/appinfo/GitRepositoryState;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.applicationNameIsLoaded(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;Lorg/jmxtrans/utils/appinfo/GitRepositoryState;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;Lorg/jmxtrans/utils/appinfo/GitRepositoryState;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;Lorg/jmxtrans/utils/appinfo/GitRepositoryState;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.issueManagementUrlIsLoaded(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>getFullVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.fullVersionContainsVersionAndGitHash(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>getFullVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.fullVersionContainsVersionAndGitHash(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>getFullVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.fullVersionContainsVersionAndGitHash(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>getFullVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.fullVersionContainsVersionAndGitHash(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>getFullVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>getFullVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.fullVersionContainsVersionAndGitHash(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>getFullVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.fullVersionContainsVersionAndGitHash(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>getFullVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.fullVersionContainsVersionAndGitHash(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>getIssueManagementUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.issueManagementUrlIsLoaded(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.applicationNameIsLoaded(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>getVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.versionNumberIsDotSeparated(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>load</name></method><methodDesc>(Ljava/lang/Class;)Lorg/jmxtrans/utils/appinfo/AppInfo;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.versionNumberIsDotSeparated(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>load</name></method><methodDesc>(Ljava/lang/Class;)Lorg/jmxtrans/utils/appinfo/AppInfo;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.versionNumberIsDotSeparated(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>load</name></method><methodDesc>(Ljava/lang/Class;)Lorg/jmxtrans/utils/appinfo/AppInfo;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.versionNumberIsDotSeparated(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>load</name></method><methodDesc>(Ljava/lang/Class;)Lorg/jmxtrans/utils/appinfo/AppInfo;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.fullVersionContainsVersionAndGitHash(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>load</name></method><methodDesc>(Ljava/lang/Class;)Lorg/jmxtrans/utils/appinfo/AppInfo;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.versionNumberIsDotSeparated(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/AppInfo</name></clazz><method><name>print</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.AppInfoTest.appInfoPrintsRequiredFields(org.jmxtrans.utils.appinfo.AppInfoTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/Properties;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>getBranch</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>getBuildTime</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>getBuildUserEmail</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>getBuildUserName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>getCommitId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>getCommitMessageFull</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>getCommitMessageShort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>getCommitTime</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>getDescribe</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>getDescribeShort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>getTags</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>load</name></method><methodDesc>()Lorg/jmxtrans/utils/appinfo/GitRepositoryState;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>load</name></method><methodDesc>()Lorg/jmxtrans/utils/appinfo/GitRepositoryState;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>load</name></method><methodDesc>()Lorg/jmxtrans/utils/appinfo/GitRepositoryState;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>load</name></method><methodDesc>()Lorg/jmxtrans/utils/appinfo/GitRepositoryState;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>load</name></method><methodDesc>()Lorg/jmxtrans/utils/appinfo/GitRepositoryState;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.appinfo.GitRepositoryStateTest.nonNullValuesAreReturnedForAllProperties(org.jmxtrans.utils.appinfo.GitRepositoryStateTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsNullForNullParameter(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsGivenNonArrayParameter(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsGivenNonArrayParameter(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsGivenNonArrayParameter(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsNullForNullParameter(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsNullForNullParameter(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/ArrayUtils</name></clazz><method><name>transformToListIfIsArray</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.ArrayUtilsTest.transformToListIfIsArrayReturnsListWhenGivenArray(org.jmxtrans.utils.collections.ArrayUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_negative_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_negative_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_list_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_negative_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_negative_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_negative_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_out_of_range_position_throws_an_exception(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_list_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/collections/Iterables2</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/Iterable;I)Ljava/lang/Object;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.collections.Iterables2Test.get_on_iterator_return_value(org.jmxtrans.utils.collections.Iterables2Test)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(IZLjava/util/Collection;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAdd(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>addAll</name></method><methodDesc>(Ljava/util/Collection;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>discardingOffer</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>discardingOffer</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>discardingOffer</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>discardingOffer</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>discardingOffer</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testAddAll(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>discardingOffer</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testOffer(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>offer</name></method><methodDesc>(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testOfferWithTimeout(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>put</name></method><methodDesc>(Ljava/lang/Object;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest.testPut(org.jmxtrans.utils.concurrent.DiscardingBlockingQueueTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Z)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Z)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.newThreadIsNamedAccordingToPrefix(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createNonDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.newThreadIsNamedAccordingToPrefix(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/NamedThreadFactory</name></clazz><method><name>newThread</name></method><methodDesc>(Ljava/lang/Runnable;)Ljava/lang/Thread;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.concurrent.NamedThreadFactoryTest.createDaemonThread(org.jmxtrans.utils.concurrent.NamedThreadFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/FileResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.FileResourceTest.fileResourceCanBeRead(org.jmxtrans.utils.io.FileResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/FileResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.FileResourceTest.fileResourceCanBeRead(org.jmxtrans.utils.io.FileResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/FileResource</name></clazz><method><name>getPath</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.FileResourceTest.fileResourceCanBeRead(org.jmxtrans.utils.io.FileResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/FileResource</name></clazz><method><name>getPath</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.FileResourceTest.fileResourceCanBeRead(org.jmxtrans.utils.io.FileResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.canCopyStreamToEmptyDestination(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.canCopyStreamToEmptyDestination(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.canCopyStreamToEmptyDestination(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.canCopyStreamToEmptyDestination(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.canCopyStreamToEmptyDestination(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>copy</name></method><methodDesc>(Ljava/io/InputStream;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.canCopyStreamToEmptyDestination(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>79</int><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.appendToExistingFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.cannotCopySmallFilesToDirectory(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.appendToExistingFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>79</int><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>79</int><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.appendToExistingFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.IoUtilsTest.copyToEmptyFile(org.jmxtrans.utils.io.IoUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>83</int><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getClasspathInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingClasspathResourceThrowsException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getClasspathInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingClasspathResourceThrowsException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getClasspathInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingClasspathResourceThrowsException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getClasspathInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingClasspathResourceThrowsException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getClasspathInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadClasspathResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getClasspathInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingClasspathResourceThrowsException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getClasspathInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingClasspathResourceThrowsException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getClasspathInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingClasspathResourceThrowsException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getClasspathInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadClasspathResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getClasspathInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingClasspathResourceThrowsException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getClasspathInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingClasspathResourceThrowsException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getClasspathInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadClasspathResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getClasspathInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadClasspathResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getFileInputStream</name></method><methodDesc>()Ljava/io/FileInputStream;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getFileInputStream</name></method><methodDesc>()Ljava/io/FileInputStream;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getFileInputStream</name></method><methodDesc>()Ljava/io/FileInputStream;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadFileResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingClasspathResourceThrowsException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadClasspathResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingClasspathResourceThrowsException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadFileUrlResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadFileUrlResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadClasspathResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadFileUrlResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.nonExistingFileThrowException(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadClasspathResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadFileUrlResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadFileResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getURLInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadFileUrlResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getURLInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadFileUrlResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getURLInputStream</name></method><methodDesc>()Ljava/io/InputStream;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.io.StandardResourceTest.canLoadFileUrlResource(org.jmxtrans.utils.io.StandardResourceTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(ILjava/util/concurrent/TimeUnit;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.intervalsWithDifferentUnitsAreNotEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.intervalIsNotEqualToString(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.sameIntervalAreEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.intervalsWithDifferentValuesAreNotEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.intervalsWithDifferentValuesAreNotEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.sameIntervalAreEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.intervalIsNotEqualToString(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.intervalsWithDifferentValuesAreNotEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.intervalsWithDifferentUnitsAreNotEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.sameIntervalAreEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.sameIntervalAreEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.sameIntervalAreEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.sameIntervalAreEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.sameIntervalAreEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.sameIntervalAreEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.sameIntervalAreEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.intervalIsNotEqualToString(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.sameIntervalAreEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.sameIntervalAreEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.intervalsWithDifferentValuesAreNotEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.sameIntervalAreEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.intervalsWithDifferentValuesAreNotEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.intervalsWithDifferentUnitsAreNotEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.intervalIsNotEqualToString(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.intervalsWithDifferentValuesAreNotEquals(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>getTimeUnit</name></method><methodDesc>()Ljava/util/concurrent/TimeUnit;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.constructedCorrectly(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>getValue</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.constructedCorrectly(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.toStringContainsValueAndUnit(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.toStringContainsValueAndUnit(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.toStringContainsValueAndUnit(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.toStringContainsValueAndUnit(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.toStringContainsValueAndUnit(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.toStringContainsValueAndUnit(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.toStringContainsValueAndUnit(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.IntervalTest.toStringContainsValueAndUnit(org.jmxtrans.utils.time.IntervalTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.ManualClockTest.clockInitializedAtTimeZero(org.jmxtrans.utils.time.ManualClockTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.ManualClockTest.clockInitializedAtTimeZero(org.jmxtrans.utils.time.ManualClockTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>currentTimeMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.ManualClockTest.waitTimeIncreasesBothMillisAndNanos(org.jmxtrans.utils.time.ManualClockTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>currentTimeMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.ManualClockTest.clockInitializedAtTimeZero(org.jmxtrans.utils.time.ManualClockTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>nanoTime</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.ManualClockTest.waitTimeIncreasesBothMillisAndNanos(org.jmxtrans.utils.time.ManualClockTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>nanoTime</name></method><methodDesc>()J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.ManualClockTest.clockInitializedAtTimeZero(org.jmxtrans.utils.time.ManualClockTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>setTime</name></method><methodDesc>(JLjava/util/concurrent/TimeUnit;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>setTime</name></method><methodDesc>(JLjava/util/concurrent/TimeUnit;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>setTime</name></method><methodDesc>(JLjava/util/concurrent/TimeUnit;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>setTime</name></method><methodDesc>(JLjava/util/concurrent/TimeUnit;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>waitFor</name></method><methodDesc>(JLjava/util/concurrent/TimeUnit;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.ManualClockTest.waitTimeIncreasesBothMillisAndNanos(org.jmxtrans.utils.time.ManualClockTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>waitFor</name></method><methodDesc>(JLjava/util/concurrent/TimeUnit;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.ManualClockTest.waitTimeIncreasesBothMillisAndNanos(org.jmxtrans.utils.time.ManualClockTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>waitFor</name></method><methodDesc>(JLjava/util/concurrent/TimeUnit;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.ManualClockTest.waitTimeIncreasesBothMillisAndNanos(org.jmxtrans.utils.time.ManualClockTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/ManualClock</name></clazz><method><name>waitFor</name></method><methodDesc>(JLjava/util/concurrent/TimeUnit;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.time.ManualClockTest.waitTimeIncreasesBothMillisAndNanos(org.jmxtrans.utils.time.ManualClockTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/NanoChronometer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/util/concurrent/atomic/AtomicLong;Lorg/jmxtrans/utils/time/Clock;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.NanoChronometerTest.chronometerMeasureIncrementingTime(org.jmxtrans.utils.NanoChronometerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/NanoChronometer</name></clazz><method><name>close</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.NanoChronometerTest.chronometerMeasureIncrementingTime(org.jmxtrans.utils.NanoChronometerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/NanoChronometer</name></clazz><method><name>close</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.NanoChronometerTest.chronometerMeasureIncrementingTime(org.jmxtrans.utils.NanoChronometerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/NanoChronometer</name></clazz><method><name>close</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">org.jmxtrans.utils.NanoChronometerTest.chronometerMeasureIncrementingTime(org.jmxtrans.utils.NanoChronometerTest)</value></killingTest></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolvePlaceholder</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/PropertyPlaceholderResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/Preconditions2</name></clazz><method><name>checkArgument</name></method><methodDesc>(ZLjava/lang/String;[Ljava/lang/Object;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>getDuration</name></method><methodDesc>(Ljava/util/concurrent/TimeUnit;)J</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>getDuration</name></method><methodDesc>(Ljava/util/concurrent/TimeUnit;)J</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/Interval</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/SystemClock</name></clazz><method><name>currentTimeMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/SystemClock</name></clazz><method><name>currentTimeMillis</name></method><methodDesc>()J</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/SystemClock</name></clazz><method><name>nanoTime</name></method><methodDesc>()J</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/time/SystemClock</name></clazz><method><name>nanoTime</name></method><methodDesc>()J</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/IoUtils</name></clazz><method><name>doCopySmallFile</name></method><methodDesc>(Ljava/io/File;Ljava/io/File;Z)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>appendEscapedNonAlphaNumericChars</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/StringUtils2</name></clazz><method><name>reverseTokens</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="MEMORY_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>getCommitUserEmail</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/appinfo/GitRepositoryState</name></clazz><method><name>getCommitUserName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>getDiscardedElementCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/concurrent/DiscardingBlockingQueue</name></clazz><method><name>getDiscardedElementCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>org/jmxtrans/utils/io/StandardResource</name></clazz><method><name>getPath</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
